<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>✏️文章 on LYOUL&#39;s Blog</title>
    <link>https://lyoul.top/posts/</link>
    <description>Recent content in ✏️文章 on LYOUL&#39;s Blog</description>
    <image>
      <url>https://lyoul.top/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://lyoul.top/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 30 Jan 2023 20:55:28 +0800</lastBuildDate><atom:link href="https://lyoul.top/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo&#43;PaperMod&#43;阿里云OSS搭建网站</title>
      <link>https://lyoul.top/posts/hugopapermodoss/</link>
      <pubDate>Mon, 30 Jan 2023 20:55:28 +0800</pubDate>
      
      <guid>https://lyoul.top/posts/hugopapermodoss/</guid>
      <description>:root { --gap: 24px; --content-gap: 20px; --nav-width: 1024px; --main-width: 720px; --header-height: 60px; --footer-height: 60px; --radius: 8px; --theme: rgb(255, 255, 255); --entry: rgb(255, 255, 255); --primary: rgb(30, 30, 30); --secondary: rgb(108, 108, 108); --tertiary: rgb(214, 214, 214); --content: rgb(31, 31, 31); --hljs-bg: rgb(28, 29, 33); --code-bg: rgb(245, 245, 245); --border: rgb(238, 238, 238); } import rclpy from rclpy.action import ActionClient from rclpy.node import Node from action_tutorials_interfaces.action import Fibonacci class FibonacciActionClient(Node): def init(self): super().init(&amp;#39;fibonacci_action_client&amp;#39;) self._action_client = ActionClient(self, Fibonacci, &amp;#39;fibonacci&amp;#39;) def send_goal(self, order): goal_msg = Fibonacci.Goal() goal_msg.order = order self._action_client.wait_for_server() self._send_goal_future = self._action_client.send_goal_async(goal_msg, feedback_callback=self.feedback_callback) self._send_goal_future.add_done_callback(self.goal_response_callback) def goal_response_callback(self, future): goal_handle = future.result() if not goal_handle.accepted: self.get_logger().info(&amp;#39;Goal rejected :(&amp;#39;) return self.get_logger().info(&amp;#39;Goal accepted :)&amp;#39;) self._get_result_future = goal_handle.get_result_async() self._get_result_future.add_done_callback(self.get_result_callback) def get_result_callback(self, future): result = future.result().result self.get_logger().info(&amp;#39;Result: {0}&amp;#39;.format(result.sequence)) rclpy.shutdown() def feedback_callback(self, feedback_msg): feedback = feedback_msg.feedback self.get_logger().info(&amp;#39;Received feedback: {0}&amp;#39;.format(feedback.partial_sequence)) def main(args=None): rclpy.init(args=args) action_client = FibonacciActionClient() action_client.send_goal(10) rclpy.spin(action_client) if __name__ == &amp;#39;__main__&amp;#39;: main() Hugo和PaperMod 为什么选择Hugo和PaperMod？ 阿里云OSS 尝试过Hugo配合GitHub Pages来建站，</description>
    </item>
    
  </channel>
</rss>
